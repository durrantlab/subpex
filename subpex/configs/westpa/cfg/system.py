from pydantic import BaseModel, Field


class BinsMapper(BaseModel):
    type: str | None = Field(default=None)
    nbins: list[int] | None = Field(default=None)
    bottleneck: bool | None = Field(default=None)
    pca: bool = Field(default=False)
    at: list[float] | None = Field(default=None)


class BinsBase(BaseModel):
    type: str | None = Field(default=None)
    boundaries: list[str | int | float] | None = Field(default=None)


class BinsModel(BaseModel):
    type: str | None = Field(default="RectilinearBinMapper")
    """This selects the bin mappers which takes vectors of coordinates (or rather,
    coordinate tuples), and assign each a definite integer value identifying a bin.

    See the [WESTPA documentation](https://westpa.readthedocs.io/en/latest/documentation/core/westpa.core.binning.html#module-westpa.core.binning.assign)
    for more information.
    """
    base: BinsBase | None = Field(default_factory=BinsBase)
    mappers: list[BinsMapper] | None = Field(default=None)


class SystemOptions(BaseModel):
    pcoord_ndim: int = Field(default=1)
    """The number of dimensions in the progress coordinate."""
    pcoord_dtype: str = Field(default="np.float64")
    """The data type of the progress coordinate, which must be callable."""
    pcoord_len: int = Field(default=2)
    """The length of the progress coordinate time series generated by each segment,
    including both the initial and final values.
    """
    bins: BinsModel | None = Field(default_factory=BinsModel)
    bin_target_counts: list[int] = [1]
    """A vector of target counts, one per bin."""


class SystemConfig(BaseModel):
    """System settings for WESTPA."""

    driver: str = Field(default="westpa.core.systems.WESTSystem")
    """An import string to a WESTPA system representation. Additional documentation
    can be found [here](https://westpa.readthedocs.io/en/latest/documentation/core/westpa.core.html#westpa.core.systems.WESTSystem).
    """
    module_path: str | None = None
    """Path where the class is defined."""
    system_options: SystemOptions = Field(default_factory=SystemOptions)
    """TODO:"""
